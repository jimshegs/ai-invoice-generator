name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1) Get your code
      - uses: actions/checkout@v4

      # 2) Set up Python (pick the version you run locally)
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3) Speed up installs by caching pipâ€™s download dir
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4) Install your deps
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      # 5) Run tests (no real API calls; we still set dummy env vars your app expects)
      - name: Run tests
        env:
          OPENAI_API_KEY: test
          FLASK_ENV: testing
          SECRET_KEY: test
        run: pytest -q


  docker-build:
    name: Docker build (no push)
    runs-on: ubuntu-latest
    needs: test  # only build if tests pass
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Optional but recommended: cache image layers between runs
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build image (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          tags: ai-invoice:ci
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Move cache to reuse next time
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
